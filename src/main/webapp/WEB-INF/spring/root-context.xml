<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<!-- ﻿0. local에서 Test할 때 사용 -->
<!-- 	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="oracle.jdbc.OracleDriver" />
		<property name="url" value="jdbc:oracle:thin:@localhost:1521/xepdb1" />
		<property name="username" value="xci" />
		<property name="password" value="xci" />
	</bean> -->
	
	<!-- 1.﻿ jdbc simple 방식 -->
	<!-- 	
	<bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
		<property name="driverClass" value="oracle.jdbc.OracleDriver" />
		<property name="url" value="jdbc:oracle:thin:@localhost:1521/xepdb1" />
		<property name="username" value="xci" />
		<property name="password" value="xci" />
	</bean> 
	-->
	
	<!-- 2. ﻿jndi connection pool 방식 -->
<!-- 	<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName" value="java:comp/env/jdbc/xcispringmvc"></property>
	</bean> -->
	
	
	<bean id="propertyConfigurer"
		  class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
		  p:location="/WEB-INF/spring/database.properties" />
	
	<!-- <import resource="database.xml"/> -->
		<!-- 3. connection pool 오브젝트 생성 (pom.xml에 hikariCP 의존 라이브러리 추가해야함) -->
	<bean
		id="dataSource"
		class="com.zaxxer.hikari.HikariDataSource"
		p:username="${username}"
		p:password="${password}"
		p:jdbcUrl="${jdbcUrl}"
		p:driverClassName="${driverClassName}"
		p:maximumPoolSize="20" />
	
	<bean id="jdbcTemplate"
	      class="org.springframework.jdbc.core.JdbcTemplate"
	      p:dataSource-ref="dataSource" />
	      
</beans>
